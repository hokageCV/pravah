/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as GroupsIndexImport } from './routes/groups/index'
import { Route as HabitsCreateImport } from './routes/habits/create'
import { Route as GroupsCreateImport } from './routes/groups/create'
import { Route as GoalsCreateImport } from './routes/goals/create'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as HabitsHabitIdIndexImport } from './routes/habits/$habitId/index'
import { Route as GroupsGroupIdIndexImport } from './routes/groups/$groupId/index'
import { Route as HabitsHabitIdEditImport } from './routes/habits/$habitId/edit'
import { Route as GoalsGoalIdEditImport } from './routes/goals/$goalId/edit'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GroupsIndexRoute = GroupsIndexImport.update({
  id: '/groups/',
  path: '/groups/',
  getParentRoute: () => rootRoute,
} as any)

const HabitsCreateRoute = HabitsCreateImport.update({
  id: '/habits/create',
  path: '/habits/create',
  getParentRoute: () => rootRoute,
} as any)

const GroupsCreateRoute = GroupsCreateImport.update({
  id: '/groups/create',
  path: '/groups/create',
  getParentRoute: () => rootRoute,
} as any)

const GoalsCreateRoute = GoalsCreateImport.update({
  id: '/goals/create',
  path: '/goals/create',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const HabitsHabitIdIndexRoute = HabitsHabitIdIndexImport.update({
  id: '/habits/$habitId/',
  path: '/habits/$habitId/',
  getParentRoute: () => rootRoute,
} as any)

const GroupsGroupIdIndexRoute = GroupsGroupIdIndexImport.update({
  id: '/groups/$groupId/',
  path: '/groups/$groupId/',
  getParentRoute: () => rootRoute,
} as any)

const HabitsHabitIdEditRoute = HabitsHabitIdEditImport.update({
  id: '/habits/$habitId/edit',
  path: '/habits/$habitId/edit',
  getParentRoute: () => rootRoute,
} as any)

const GoalsGoalIdEditRoute = GoalsGoalIdEditImport.update({
  id: '/goals/$goalId/edit',
  path: '/goals/$goalId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/goals/create': {
      id: '/goals/create'
      path: '/goals/create'
      fullPath: '/goals/create'
      preLoaderRoute: typeof GoalsCreateImport
      parentRoute: typeof rootRoute
    }
    '/groups/create': {
      id: '/groups/create'
      path: '/groups/create'
      fullPath: '/groups/create'
      preLoaderRoute: typeof GroupsCreateImport
      parentRoute: typeof rootRoute
    }
    '/habits/create': {
      id: '/habits/create'
      path: '/habits/create'
      fullPath: '/habits/create'
      preLoaderRoute: typeof HabitsCreateImport
      parentRoute: typeof rootRoute
    }
    '/groups/': {
      id: '/groups/'
      path: '/groups'
      fullPath: '/groups'
      preLoaderRoute: typeof GroupsIndexImport
      parentRoute: typeof rootRoute
    }
    '/goals/$goalId/edit': {
      id: '/goals/$goalId/edit'
      path: '/goals/$goalId/edit'
      fullPath: '/goals/$goalId/edit'
      preLoaderRoute: typeof GoalsGoalIdEditImport
      parentRoute: typeof rootRoute
    }
    '/habits/$habitId/edit': {
      id: '/habits/$habitId/edit'
      path: '/habits/$habitId/edit'
      fullPath: '/habits/$habitId/edit'
      preLoaderRoute: typeof HabitsHabitIdEditImport
      parentRoute: typeof rootRoute
    }
    '/groups/$groupId/': {
      id: '/groups/$groupId/'
      path: '/groups/$groupId'
      fullPath: '/groups/$groupId'
      preLoaderRoute: typeof GroupsGroupIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/habits/$habitId/': {
      id: '/habits/$habitId/'
      path: '/habits/$habitId'
      fullPath: '/habits/$habitId'
      preLoaderRoute: typeof HabitsHabitIdIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/goals/create': typeof GoalsCreateRoute
  '/groups/create': typeof GroupsCreateRoute
  '/habits/create': typeof HabitsCreateRoute
  '/groups': typeof GroupsIndexRoute
  '/goals/$goalId/edit': typeof GoalsGoalIdEditRoute
  '/habits/$habitId/edit': typeof HabitsHabitIdEditRoute
  '/groups/$groupId': typeof GroupsGroupIdIndexRoute
  '/habits/$habitId': typeof HabitsHabitIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/goals/create': typeof GoalsCreateRoute
  '/groups/create': typeof GroupsCreateRoute
  '/habits/create': typeof HabitsCreateRoute
  '/groups': typeof GroupsIndexRoute
  '/goals/$goalId/edit': typeof GoalsGoalIdEditRoute
  '/habits/$habitId/edit': typeof HabitsHabitIdEditRoute
  '/groups/$groupId': typeof GroupsGroupIdIndexRoute
  '/habits/$habitId': typeof HabitsHabitIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/goals/create': typeof GoalsCreateRoute
  '/groups/create': typeof GroupsCreateRoute
  '/habits/create': typeof HabitsCreateRoute
  '/groups/': typeof GroupsIndexRoute
  '/goals/$goalId/edit': typeof GoalsGoalIdEditRoute
  '/habits/$habitId/edit': typeof HabitsHabitIdEditRoute
  '/groups/$groupId/': typeof GroupsGroupIdIndexRoute
  '/habits/$habitId/': typeof HabitsHabitIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/auth/login'
    | '/auth/signup'
    | '/goals/create'
    | '/groups/create'
    | '/habits/create'
    | '/groups'
    | '/goals/$goalId/edit'
    | '/habits/$habitId/edit'
    | '/groups/$groupId'
    | '/habits/$habitId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/auth/login'
    | '/auth/signup'
    | '/goals/create'
    | '/groups/create'
    | '/habits/create'
    | '/groups'
    | '/goals/$goalId/edit'
    | '/habits/$habitId/edit'
    | '/groups/$groupId'
    | '/habits/$habitId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/auth/login'
    | '/auth/signup'
    | '/goals/create'
    | '/groups/create'
    | '/habits/create'
    | '/groups/'
    | '/goals/$goalId/edit'
    | '/habits/$habitId/edit'
    | '/groups/$groupId/'
    | '/habits/$habitId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
  GoalsCreateRoute: typeof GoalsCreateRoute
  GroupsCreateRoute: typeof GroupsCreateRoute
  HabitsCreateRoute: typeof HabitsCreateRoute
  GroupsIndexRoute: typeof GroupsIndexRoute
  GoalsGoalIdEditRoute: typeof GoalsGoalIdEditRoute
  HabitsHabitIdEditRoute: typeof HabitsHabitIdEditRoute
  GroupsGroupIdIndexRoute: typeof GroupsGroupIdIndexRoute
  HabitsHabitIdIndexRoute: typeof HabitsHabitIdIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
  GoalsCreateRoute: GoalsCreateRoute,
  GroupsCreateRoute: GroupsCreateRoute,
  HabitsCreateRoute: HabitsCreateRoute,
  GroupsIndexRoute: GroupsIndexRoute,
  GoalsGoalIdEditRoute: GoalsGoalIdEditRoute,
  HabitsHabitIdEditRoute: HabitsHabitIdEditRoute,
  GroupsGroupIdIndexRoute: GroupsGroupIdIndexRoute,
  HabitsHabitIdIndexRoute: HabitsHabitIdIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/auth/login",
        "/auth/signup",
        "/goals/create",
        "/groups/create",
        "/habits/create",
        "/groups/",
        "/goals/$goalId/edit",
        "/habits/$habitId/edit",
        "/groups/$groupId/",
        "/habits/$habitId/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/goals/create": {
      "filePath": "goals/create.tsx"
    },
    "/groups/create": {
      "filePath": "groups/create.tsx"
    },
    "/habits/create": {
      "filePath": "habits/create.tsx"
    },
    "/groups/": {
      "filePath": "groups/index.tsx"
    },
    "/goals/$goalId/edit": {
      "filePath": "goals/$goalId/edit.tsx"
    },
    "/habits/$habitId/edit": {
      "filePath": "habits/$habitId/edit.tsx"
    },
    "/groups/$groupId/": {
      "filePath": "groups/$groupId/index.tsx"
    },
    "/habits/$habitId/": {
      "filePath": "habits/$habitId/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
